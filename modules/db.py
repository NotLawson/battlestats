import psycopg2, json

## DATABASE SETUP ##
from psycopg2.extras import Json
from psycopg2.extensions import register_adapter
register_adapter(dict, Json)
conn = psycopg2.connect(
    host="db",
    database="battlestats",
    user="postgres",
    password="postgres"
)
conn.autocommit = True
cursor = conn.cursor()


## TABLE CREATION ##
# Users table
# - id: User id
# - username: Username
# - password: hash of password. the password is never given to the server, the hash is generated by the client side and 
#   then sent to the server. This protects the user's password in the event of a database breach
# - email: email used for communication with the user
# - token: The battletabs user token. The user will generate the token client side (again, no credentials going to the server) and
#   then send it to the server. This allows us to support Discord, Google and Apple login ontop of user/password (hopefully, I will
#   investigate this later)
# - flags: specifies the account type, as well as warnings, bans, moderation and admin:
#   - standard: Standard user account. has an email, has a valid token

cursor.execute('''
CREATE TABLE users(
               id serial primary key,
               username varchar(50) not null,
               password varchar(255) not null,
               email varchar(50),
               token text;
               battletabs_id text;
               battletabs_username text;
               flags array(text);
               last_login timestamp;
               account_created timestamp;
               )
''')

# Stats Table
# - user_id: the user id that the stats belong to
# - wins: amount of wins;
# - losses: amount of losses;
# - winrate: winrate
# - 